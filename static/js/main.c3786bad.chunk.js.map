{"version":3,"sources":["movie.js","App.js","index.js"],"names":["Movie","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","className","map","movie","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sUAmCeA,ICuBAC,E,4MApDbC,MAAM,CACJC,WAAY,EACZC,OAAS,I,EAGXC,U,sBAAY,8BAAAC,EAAA,sEAE6BC,IAAMC,IAAI,yDAFvC,gBAEWJ,EAFX,EAEHK,KAAOA,KAAOL,OACrB,EAAKM,SAAS,CAACN,OAAQA,EAAQD,WAAW,IAHhC,2C,kEAOVQ,KAAKN,c,+BAQC,MAGsBM,KAAKT,MAA1BC,EAHD,EAGCA,UAAWC,EAHZ,EAGYA,OAClB,OACE,6BAASQ,UAAU,aAChBT,EACC,yBAAKS,UAAU,UACb,0BAAMA,UAAU,eAAhB,eAGF,yBAAKA,UAAU,UACdR,EAAOS,KAAK,SAAAC,a,GAjCLC,IAAMC,WCDxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.c3786bad.chunk.js","sourcesContent":["//movies를 render할 곳 \r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({year, title, summary, poster, genres}){\r\n    return (\r\n    <div className=\"movie\">\r\n        <img src={poster} alt={title} title={title}/>\r\n        <div className=\"movie__data\">\r\n            <h3 className=\"movie__title\">{title}</h3>\r\n            <h5 className=\"movie__year\">{year}</h5>\r\n            <ul className=\"movie__genres\">\r\n                {genres.map((genre , index) => \r\n                <li key={index} className=\"genres__genre\">\r\n                    {genre}\r\n                </li>\r\n                )}\r\n            </ul>\r\n            <p className=\"movie__summary\">{summary.slice(0,180)}...</p>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes = { //PropTypes말고 proptypes로 쓰기\r\n    //가지고 오고 싶은 data 가져오기\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;","import React from 'react';\nimport axios from \"axios\";\nimport Movie from \"./movie\";\nimport \"./App.css\";\n\nclass App extends React.Component{\n  state={\n    isLoading : true,\n    movies : []\n  };\n\n  getMovies = async () =>{\n    //await: 비동기, 너는 이걸 기다려야해\n    const {data: {data: {movies}}} = await axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=rating\");\n    this.setState({movies: movies, isLoading: false})\n    //movies:from state , movies: 내가 fetch한것. javascript는 movies하나만 써도 알아먹음\n  }\n  componentDidMount(){\n    this.getMovies();\n\n    // setTimeout( () => {\n    //   this.setState({ isLoading : false })\n    // }, 6000);\n    //5초후 로딩되면 ready로 바꾸는 예시\n  }\n\n  render(){\n    //state에서 가져오는법\n    // css를 위한 class는 react가 헷갈리지 않도록 className으로 써줘야함\n    const {isLoading, movies} = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader_text\">Loading...</span>\n          </div>\n          ) : (            \n          <div className=\"movies\">\n          {movies.map( movie =>( \n          //return 생략\n\n            <Movie \n              key={movie.id}\n              id={movie.id} \n              title= {movie.title}\n              year={movie.year} \n              summary={movie.summary} \n              poster={movie.medium_cover_image}\n              genres={movie.genres}\n            />\n        ))}\n        </div>\n        )} \n      </section>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// <App />과 같은것을 component라고 부름, \n//react는 component로 이루어져있고 component와 함께 동작함\n//component는 html을 반환하는 함수!\n\n//react application은 하나의 component만을 rendering해야함. (=App)"],"sourceRoot":""}